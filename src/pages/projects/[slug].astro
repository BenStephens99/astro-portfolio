---
import Layout from "../../layouts/Layout.astro";
import { urlFor } from "../../utils/image";
import { PortableText } from "astro-portabletext";
import { getProject } from "../../utils/sanity";

const { slug } = Astro.params;

const project = await getProject(slug);
---

<Layout title={project.title}>
    <div class="project">
        <a href="/projects" class="no-underline"><button>Back</button></a>
        <div class="title">
            <h2>{project.title}</h2>
            {
                project?.github ? (
                    <a
                        href={project.github}
                        target="_blank"
                        class="no-underline"
                    >
                        <img
                            src="/githubLogo.svg"
                            alt="Github"
                            width="35"
                            height="35"
                        />
                    </a>
                ) : (
                    ""
                )
            }
        </div>
        <img
            class="thumbnail"
            src={urlFor(project.thumbnail).width(1000).auto("format").url()}
            alt={project.title}
            style=`view-transition-name:image-${project._id};`
        />
        <div class="technologies">
            {
                project?.technologies?.map((technology) => (
                    <img
                        src={urlFor(technology.icon)
                            .width(50)
                            .auto("format")
                            .url()}
                        alt={technology.name}
                        title={technology.name}
                    />
                ))
            }
        </div>
        <article>
            {
                project?.sections?.map((section) => (
                    <div class="project-section">
                        {section?.body ? (
                            <div class="project-section__body">
                                <PortableText value={section.body} />
                            </div>
                        ) : (
                            ""
                        )}
                        {section?.images?.length ? (
                            <div class="section-gallery">
                                <div class="section-gallery__images">
                                    {section?.images?.map((image) => (
                                        <img
                                            src={urlFor(image)
                                                .width(1400)
                                                .auto("format")
                                                .url()}
                                            alt={section.imageCaption}
                                        />
                                    ))}
                                </div>
                                <div class="section-gallery__caption">
                                    {section.imageCaption}
                                </div>
                            </div>
                        ) : (
                            ""
                        )}
                    </div>
                ))
            }
            <div class="gallery">
                {
                    project?.images?.map((image) => (
                        <img
                            src={urlFor(image).width(200).auto("format").url()}
                            alt={project.title}
                        />
                    ))
                }
            </div>
        </article>
    </div>
</Layout>

<style lang="scss">
    button {
        color: white;
        background-color: var(--accent);
    }

    .project {
        width: 100%;
        padding: 2rem;
        max-width: 800px;
        margin: auto;
        display: flex;
        flex-direction: column;
        gap: 2rem;
    }

    .title {
        display: flex;
        justify-content: space-between;
        align-items: center;
        max-width: 600px;
        gap: 1rem;

        img {
            transition: 0.3s;
            &:hover {
                transform: scale(1.1);
            }
        }
    }

    h2 {
        font-size: 2.2rem;
        margin: 0;
    }

    .thumbnail {
        width: 100%;
        max-width: 600px;
        aspect-ratio: 16/9;
        object-fit: cover;
    }

    .technologies {
        display: flex;
        gap: 0.5rem;

        img {
            height: 30px;
            width: 30px;
            object-fit: contain;
            border-radius: 0px;
        }
    }

    article {
        display: flex;
        flex-direction: column;
        gap: 2rem;
    }

    .project-section {
        display: flex;
        flex-direction: column;
        gap: 1rem;

        &__body {
            max-width: 600px;
        }
    }

    .section-gallery {
        width: 100%;
        max-width: 800px;

        img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 0px;
        }

        &__images {
            display: inline-flex;
            gap: 1rem;

            img {
                max-height: 415px;
            }
        }

        &__caption {
            padding: 0 0.5rem;
            margin: 0.2rem 0;
            font-size: 0.9rem;
            border-left: 2px solid rgba(0, 0, 0, 0.2);
        }
    }

    .gallery {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;

        img {
            width: 100%;
            max-width: 150px;
            height: auto;
            border-radius: 0px;
        }
    }
</style>
